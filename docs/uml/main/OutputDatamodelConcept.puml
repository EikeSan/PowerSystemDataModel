@startuml

abstract class UniqueEntity {
    + {static} UUID_FIELD_NAME: String
    + uuid: UUID
}

package Result {
    abstract Class ResultEntity{
        + timestamp: ZonedDateTime
        + inputModel: UUID
    }
    UniqueEntity <|-- ResultEntity
}

package GridElements {

    package Connectors {

        abstract Class ConnectorResult{
            + iAMag: ComparableQuantity<ElectricCurrent>
            + iAAng: ComparableQuantity<Angle>
            + iBMag: ComparableQuantity<ElectricCurrent>
            + iBAng: ComparableQuantity<Angle>
        }
        ResultEntity <|-- ConnectorResult

        abstract Class TransformerResult{
            + tapPos: int
        }
        ConnectorResult <|-- TransformerResult

        Class Transformer2wResult
        TransformerResult <|-- Transformer2wResult

        Class Transformer3wResult{
            + iCMag: ComparableQuantity<ElectricCurrent>
            + iCAng: ComparableQuantity<Angle>
        }
        TransformerResult <|-- Transformer3wResult

        Class LineResult
        ConnectorResult <|-- LineResult

        Class SwitchResult{
            + closed: boolean
        }
        ConnectorResult <|-- SwitchResult
    }

    Class NodeResult{
        + vMag: ComparableQuantity<Dimensionless>
        + vAng: ComparableQuantity<Angle>
    }
    ResultEntity <|-- NodeResult
}

package SystemParticipants {

    abstract Class SystemParticipantResult{
        + p: ComparableQuantity<Power>
        + q: ComparableQuantity<Power>
    }
    ResultEntity  <|-- SystemParticipantResult

    Class LoadResult
    SystemParticipantResult <|-- LoadResult

    Class FixedFeedInResult
    SystemParticipantResult <|-- FixedFeedInResult

    Class BmResult
    SystemParticipantResult <|-- BmResult

    Class PvResult
    SystemParticipantResult  <|-- PvResult

    Class ChpResult
    SystemParticipantResult <|-- ChpResult

    Class WecResult
    SystemParticipantResult <|-- WecResult

    Class EvcsResult
    SystemParticipantResult <|-- EvcsResult

    Class EvResult{
        + soc: ComparableQuantity<Dimensionless>
    }
    SystemParticipantResult <|-- EvResult

    Class StorageResult{
        + soc: ComparableQuantity<Dimensionless>
    }
    SystemParticipantResult <|-- StorageResult
}

package ThermalUnits {

    Abstract Class ThermalUnitResult {
        - qDot: ComparableQuantity<Power> [MW]
    }
    ResultEntity <|-- ThermalUnitResult

    Abstract Class ThermalSinkResult
    ThermalUnitResult <|-- ThermalSinkResult

    Class ThermalHouseResult {
        - indoorTemperature: ComparableQuantity<Temperature> [Â°C]
    }
    ThermalSinkResult <|-- ThermalHouseResult

    Abstract Class ThermalStorageResult {
        - energy: ComparableQuantity<Energy> [MWh]
    }
    ThermalUnitResult <|-- ThermalStorageResult

    Class CylindricalStorageResult {
    - fillLevel: ComparableQuantity<Dimensionless> [%]
    }
    ThermalStorageResult <|-- CylindricalStorageResult
}

@enduml