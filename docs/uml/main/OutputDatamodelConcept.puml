@startuml

abstract class UniqueEntity {
    + {static} UUID_FIELD_NAME: String
    + uuid: UUID
}

package result {
    abstract Class ResultEntity{
        + ZonedDateTime:  timestamp
        + UUID:  inputModel
    }
    UniqueEntity <|-- ResultEntity
}

package system {

    abstract Class SystemParticipantResult{
        + p: ComparableQuantity<Power>
        + q: ComparableQuantity<Power>
    }
    ResultEntity  <|-- SystemParticipantResult

    Class LoadResult
    SystemParticipantResult <|-- LoadResult

    Class FixedFeedInResult {
        + sRated: ComparableQuantity<Power>
        + cosphiRated: Double
    }
    SystemParticipantResult <|-- FixedFeedInResult

    Class BmResult
    SystemParticipantResult <|-- BmResult

    Class PvResult
    SystemParticipantResult  <|-- PvResult

    Class ChpResult
    SystemParticipantResult <|-- ChpResult

    Class WecResult
    SystemParticipantResult <|-- WecResult

    Class EvcsResult
    SystemParticipantResult <|-- EvcsResult

    Class EvResult{
        + soc: double
    }
    SystemParticipantResult <|-- EvResult

    Class StorageResult{
        + soc: double
    }
    SystemParticipantResult <|-- StorageResult
}

package connector {

    abstract Class ConnectorResult{
        + iAMag: ComparableQuantity<ElectricCurrent>
        + iAAng: ComparableQuantity<Angle>
        + iBMag: ComparableQuantity<ElectricCurrent>
        + iBAng: ComparableQuantity<Angle>
    }
    ResultEntity <|-- ConnectorResult

    abstract Class TransformerResult{
        + tapPos: int
    }
    ConnectorResult <|-- TransformerResult

    Class LineResult
    ConnectorResult <|-- LineResult

    Class Transformer2wResult
    TransformerResult <|-- Transformer2wResult

    Class Transformer3wResult{
        + iCMag: ComparableQuantity<ElectricCurrent>
        + iCAng: ComparableQuantity<Angle>
    }
    TransformerResult <|-- Transformer3wResult

    Class SwitchResult{
        + closed: boolean
    }
    ConnectorResult <|-- SwitchResult
}

Class NodeResult{
    + vMag: ComparableQuantity<ElectricCurrent>
    + vAng: ComparableQuantity<Angle>
}
ResultEntity <|-- NodeResult

package thermal {

    Abstract Class ThermalUnitResult {
        - qDot: ComparableQuantity<Power> [MW]
    }
    ResultEntity <|-- ThermalUnitResult

    Abstract Class ThermalSinkResult
    ThermalUnitResult <|-- ThermalSinkResult

    Class ThermalHouseResult {
        - indoorTemperature: ComparableQuantity<Temperature> [Â°C]
    }
    ThermalSinkResult <|-- ThermalHouseResult

    Abstract Class ThermalStorageResult {
        - energy: ComparableQuantity<Energy> [MWh]
    }
    ThermalUnitResult <|-- ThermalStorageResult

    Class CylindricalStorageResult {
    - fillLevel: ComparableQuantity<Dimensionless> [%]
    }
    ThermalStorageResult <|-- CylindricalStorageResult
}

@enduml