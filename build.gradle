plugins {
	id 'java' //java support
	id 'groovy' //groovy support
	id 'pmd' // code check, working on source code
	id 'com.github.spotbugs' version '2.0.0' // code check, working on byte code
	id 'com.diffplug.gradle.spotless' version '3.27.1'//code format
	id 'com.github.onslip.gradle-one-jar' version '1.0.5' // pack a self contained jar
	id 'jacoco' // java code coverage plugin
	id "org.sonarqube" version "2.8" // sonarqube
}

ext {
	//version (changing these should be considered thoroughly!)
	javaVersion = JavaVersion.VERSION_1_8
	unitsOfMeasurementVersion = '1.0.10'
	tscfgVersion = '0.9.9'

	scriptsLocation = 'gradle' + File.separator + 'scripts' + File.separator //location of script plugins
}

group = 'com.github.ie3-institute'
description = 'PowerSystemDataModel'
version = '1.1-SNAPSHOT'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

apply from: scriptsLocation + 'tests.gradle'
apply from: scriptsLocation + 'pmd.gradle'
apply from: scriptsLocation + 'spotbugs.gradle'
apply from: scriptsLocation + 'spotless.gradle'
apply from: scriptsLocation + 'checkJavaVersion.gradle'

repositories {
	jcenter() //searches in bintray's repository 'jCenter', which contains Maven Central
	maven { url 'https://www.jitpack.io' } // allows github repos as dependencies

}

dependencies {
	//	 ieÂ³ power system utils
	compile 'com.github.ie3-institute:PowerSystemUtils:1.3.1'

	compile "tec.uom:uom-se:$unitsOfMeasurementVersion"

	// JTS Topology Suite for GeoPositions, License: EPL 1.0 / EDL 1.0
	compile 'org.locationtech.jts:jts-core:1.16.1'
	compile 'org.locationtech.jts.io:jts-io-common:1.16.1'

	// Graphs
	compile 'org.jgrapht:jgrapht-core:1.3.1'

	compile 'org.influxdb:influxdb-java:2.17' //for influxdb connector
	compile 'com.couchbase.client:java-client:3.0.0'
	compile 'com.opencsv:opencsv:5.0' //for csv connector

//	neo4j
	compile 'org.neo4j.driver:neo4j-java-driver:4.0.0'
	compile "org.neo4j:neo4j-ogm-core:3.+"
	runtime "org.neo4j:neo4j-ogm-bolt-driver:3.+"

	//csv logging
	runtime 'org.apache.logging.log4j:log4j-api:+'
	runtime 'org.apache.logging.log4j:log4j-core:+'
	runtime 'org.apache.commons:commons-csv:+'


	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.2'

	//hibernate
	compile 'org.hibernate:hibernate-core:' + '5.3.3.Final'
	compile 'org.hibernate:hibernate-ehcache:' + '5.3.3.Final'
	implementation 'org.hibernate:hibernate-c3p0:' + '5.3.3.Final'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen:' + '5.3.3.Final'


	// JAX-B dependencies for JDK 9+
	annotationProcessor "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	annotationProcessor "org.glassfish.jaxb:jaxb-runtime:2.3.2"
	compile "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	compile "org.glassfish.jaxb:jaxb-runtime:2.3.2"

	annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'
	compile 'javax.annotation:javax.annotation-api:1.3.2'

	//testing
	testCompile 'org.junit.jupiter:junit-jupiter:5.5.2'
	testCompile 'org.spockframework:spock-core:2.0-M1-groovy-2.5'
	testCompile 'org.objenesis:objenesis:3.1' // Mock creation with constructor parameters

	// logging
	compile 'org.apache.logging.log4j:log4j-api:+' // log4j
	compile 'org.apache.logging.log4j:log4j-core:+' // log4j
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:+' // log4j -> slf4j
}

test {
	useJUnitPlatform()
}

wrapper {
	gradleVersion = '6.0.1'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task printVersion {
	doLast {
		println project.version
	}
}

jar {
	manifest {
		attributes 'Main-class': 'edu.ie3.dataconnection.metrics.Main'
	}
}